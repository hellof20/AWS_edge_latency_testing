AWSTemplateFormatVersion: '2010-09-09'
Parameters:
    ImageID:
      Description: To specify the ami in the specific region
      Type: AWS::EC2::Image::Id
    KeyPair:
      Description: To specify the KeyPair
      Type: AWS::EC2::KeyPair::KeyName
  CDNTESTVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/28  
      Tags: 
        - Key: Name
          Values: CDNTEST
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: CDNTEST
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: CDNTESTVPC
      InternetGatewayId:
        Ref: myInternetGateway
  mySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: CDNTESTVPC
      CidrBlock: 10.0.0.0/28
      Tags:
      - Key: Name
        Value: CDNTEST
  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: CDNTESTVPC
      Tags:
      - Key: Name
        Value: CDNTEST
  myRoute: 
    Type: AWS::EC2::Route
    DependsOn: myInternetGateway
    Properties:
       RouteTableId:
         Ref: myRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: myInternetGateway
  myEc2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref ImageID  
      InstanceType: "t3.medium"
      KeyName: 
        Ref: KeyPair
      SecurityGroupIds:
        - !GetAtt mySecurityGroup
      SubnetId: !Ref mySubnet
      UserData:
        'Fn::Base64': >-
          #!/bin/bash
          yum install git -y
          git clone https://github.com/hellof20/galatency.git
          wget https://nodejs.org/dist/v12.16.0/node-v12.16.0-linux-x64.tar.xz
          xz -d node-v12.16.0-linux-x64.tar.xz
          tar -xvf node-v12.16.0-linux-x64.tar
          ln -s /node-v12.16.0-linux-x64/bin/node /usr/bin/node
          ln -s /node-v12.16.0-linux-x64/bin/npm /usr/bin/npm
          echo "*/10 * * * * root /bin/bash /galatency/update.sh" >> /etc/crontab
          cd /galatency/node-ws/
          npm i
          node index.js
  mySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        this sg for cdn test
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: All Traffic
          FromPort: 0
          IpProtocol: tcp
          ToPort: 65535
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: SSH access
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: HTTP IPv4
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId: !Ref CDNTESTVPC
  myDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !GetAtt Resourceinstance.DNSName
          Id: myCustomOrigin
          CustomOriginConfig:
            HTTPPort: '80'
            OriginProtocolPolicy: http-only
        Enabled: 'true'
        Comment: 'this is for cnd test'
        DefaultCacheBehavior:
          TargetOriginId: myCustomOrigin
          SmoothStreaming: 'false'
          DefaultTTL: 0
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          MaxTTL: 0
          MinTTL: 0
          ViewerProtocolPolicy: allow-all
      Tags:
        - 
          Key: Name
          Value: CDNtest
  myAccelerator:
    Type: 'AWS::GlobalAccelerator::Accelerator'
    Properties:
      Name: MySampleAccelerator
      IpAddressType: "IPV4"
      Enabled: true
  mySampleListener:
    Type: 'AWS::GlobalAccelerator::Listener'
    Properties:
      AcceleratorArn: !Ref myAccelerator
      Protocol: TCP
      PortRanges:
        - FromPort: '80'
          ToPort: '80'
  myEndpointGroup:
    Type: 'AWS::GlobalAccelerator::EndpointGroup'
    Properties:
      ListenerArn: !Ref mySampleListener
      EndpointGroupRegion: ap-southeast-1
      EndpointConfigurations:
        - EndpointId: !Ref myEc2Instance
          ClientIPPreservationEnabled: true
Outputs:
  AcceleratorDNS:
    Description: DNS for Global Accelerator
    Value: !GetAtt SampleAccelerator.DnsName
